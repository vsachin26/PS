{"ast":null,"code":"var _jsxFileName = \"D:\\\\capturing\\\\src\\\\components\\\\QuizGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Webcam from 'react-webcam';\nimport quizData from '../quizData';\nimport Confetti from './Confetti';\nimport './Quiz.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction QuizGame({\n  playerName\n}) {\n  _s();\n  const [backgroundColor, setBackgroundColor] = useState('default');\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(10);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [reachedQuizEnd, setReachedQuizEnd] = useState(false);\n  const [capture, setCapture] = useState(null);\n\n  // Webcam and face capture references and states\n  const webcamRef = useRef(null);\n  const [capturedImages, setCapturedImages] = useState([]);\n  const captureIntervalRef = useRef(null);\n\n  // Add this state to store the uploaded image URLs\n  const [uploadedImageUrls, setUploadedImageUrls] = useState([]);\n\n  // Start webcam and begin face capture\n  const startWebcamCapture = () => {\n    if (captureIntervalRef.current) {\n      clearInterval(captureIntervalRef.current);\n    }\n    captureIntervalRef.current = setInterval(async () => {\n      if (webcamRef.current) {\n        const imageSrc = webcamRef.current.getScreenshot();\n        if (imageSrc) {\n          console.log('Image captured, preparing for upload...');\n\n          // Convert base64 to blob\n          const base64Response = await fetch(imageSrc);\n          const blob = await base64Response.blob();\n\n          // Upload the image\n          await handleImageUpload(blob);\n          setCapturedImages(prevImages => [...prevImages, imageSrc]);\n        }\n      }\n    }, 5000);\n  };\n\n  // Stop webcam capture\n  const stopWebcamCapture = () => {\n    if (captureIntervalRef.current) {\n      clearInterval(captureIntervalRef.current);\n      captureIntervalRef.current = null;\n    }\n  };\n\n  // Initial webcam setup\n  useEffect(() => {\n    startWebcamCapture();\n\n    // Cleanup function\n    return () => {\n      stopWebcamCapture();\n    };\n  }, []);\n\n  // Stop capture when quiz ends\n  useEffect(() => {\n    if (reachedQuizEnd) {\n      stopWebcamCapture();\n    }\n  }, [reachedQuizEnd]);\n  const handleNextQuestion = () => {\n    setBackgroundColor('default');\n    if (currentQuestion < quizData.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n      setTimeLeft(30);\n    } else {\n      setReachedQuizEnd(true);\n      setShowScore(true);\n      setShowConfetti(true);\n    }\n  };\n  useEffect(() => {\n    if (timeLeft > 0) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearTimeout(timer);\n    } else {\n      handleNextQuestion();\n    }\n  }, [timeLeft]);\n  const handleAnswerOptionClick = index => {\n    if (index === quizData[currentQuestion].answer) {\n      setScore(score + 1);\n      setBackgroundColor('correct');\n    } else {\n      setBackgroundColor('incorrect');\n    }\n    setTimeout(handleNextQuestion, 500);\n  };\n  const handleRestartQuiz = () => {\n    setCurrentQuestion(0);\n    setScore(0);\n    setShowScore(false);\n    setTimeLeft(30);\n    setShowConfetti(false);\n    setReachedQuizEnd(false);\n    setBackgroundColor('default');\n    setCapturedImages([]);\n    setUploadedImageUrls([]); // Clear uploaded image URLs\n    startWebcamCapture();\n  };\n  const handleImageUpload = async imageBlob => {\n    try {\n      console.log('Preparing to upload image blob:', imageBlob);\n      const formData = new FormData();\n      formData.append('image', imageBlob, 'captured-image.jpg');\n      console.log('Sending request to server...');\n      const response = await axios.post('http://localhost:3001/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('Upload response:', response.data);\n\n      // Store the uploaded image URL\n      if (response.data.fileUrl) {\n        setUploadedImageUrls(prev => [...prev, response.data.fileUrl]);\n      }\n    } catch (error) {\n      var _error$response;\n      console.error('Error uploading image:', error);\n      console.error('Error details:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n    }\n  };\n  const captureImage = async () => {\n    if (webcamRef.current) {\n      const imageSrc = webcamRef.current.getScreenshot();\n      setCapture(imageSrc);\n\n      // Convert base64 to blob\n      const base64Response = await fetch(imageSrc);\n      const blob = await base64Response.blob();\n\n      // Upload the image\n      await handleImageUpload(blob);\n\n      // Add to captured images array\n      setCapturedImages(prevImages => [...prevImages, imageSrc]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `one ${backgroundColor}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"webcam-container\",\n        style: {\n          display: 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(Webcam, {\n          audio: false,\n          ref: webcamRef,\n          screenshotFormat: \"image/jpeg\",\n          videoConstraints: {\n            width: 220,\n            height: 200,\n            facingMode: \"user\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), showConfetti && /*#__PURE__*/_jsxDEV(Confetti, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 26\n      }, this), showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"\\uD83C\\uDF89 Congratulations \", playerName, \"! \\uD83C\\uDF89\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Your Score: \", score, \" / \", quizData.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRestartQuiz,\n          children: \"Restart Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"captured-images\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Captured Images During Quiz:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: '10px'\n            },\n            children: uploadedImageUrls.map((imageUrl, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'relative'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: imageUrl,\n                alt: `Captured ${index + 1}`,\n                style: {\n                  width: '150px',\n                  height: '150px',\n                  objectFit: 'cover',\n                  borderRadius: '8px',\n                  border: '2px solid #ddd'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  position: 'absolute',\n                  bottom: '5px',\n                  right: '5px',\n                  background: 'rgba(0,0,0,0.7)',\n                  color: 'white',\n                  padding: '2px 6px',\n                  borderRadius: '4px',\n                  fontSize: '12px'\n                },\n                children: [\"#\", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar-fill\",\n            style: {\n              width: `${(currentQuestion + 1) / quizData.length * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer\",\n          children: [\"Time Left: \", timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: quizData[currentQuestion].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), quizData[currentQuestion].image && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: quizData[currentQuestion].image,\n            alt: \"quiz illustration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options\",\n            children: quizData[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleAnswerOptionClick(index),\n              className: \"option-button\",\n              children: option\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizGame, \"TNqtqK1wBgiJvGgBy701tcSJxcg=\");\n_c = QuizGame;\nexport default QuizGame;\nvar _c;\n$RefreshReg$(_c, \"QuizGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Webcam","quizData","Confetti","jsxDEV","_jsxDEV","Fragment","_Fragment","QuizGame","playerName","_s","backgroundColor","setBackgroundColor","currentQuestion","setCurrentQuestion","score","setScore","showScore","setShowScore","timeLeft","setTimeLeft","showConfetti","setShowConfetti","reachedQuizEnd","setReachedQuizEnd","capture","setCapture","webcamRef","capturedImages","setCapturedImages","captureIntervalRef","uploadedImageUrls","setUploadedImageUrls","startWebcamCapture","current","clearInterval","setInterval","imageSrc","getScreenshot","console","log","base64Response","fetch","blob","handleImageUpload","prevImages","stopWebcamCapture","handleNextQuestion","length","timer","setTimeout","clearTimeout","handleAnswerOptionClick","index","answer","handleRestartQuiz","imageBlob","formData","FormData","append","response","post","headers","data","fileUrl","prev","error","_error$response","captureImage","className","children","style","display","audio","ref","screenshotFormat","videoConstraints","width","height","facingMode","fileName","_jsxFileName","lineNumber","columnNumber","onClick","flexWrap","gap","map","imageUrl","position","src","alt","objectFit","borderRadius","border","bottom","right","background","color","padding","fontSize","question","image","options","option","_c","$RefreshReg$"],"sources":["D:/capturing/src/components/QuizGame.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\n\nimport Webcam from 'react-webcam';\nimport quizData from '../quizData';\nimport Confetti from './Confetti';\nimport './Quiz.css';\n\nfunction QuizGame({ playerName }) {\n  \n  const [backgroundColor, setBackgroundColor] = useState('default');\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(10); \n  const [showConfetti, setShowConfetti] = useState(false);\n  const [reachedQuizEnd, setReachedQuizEnd] = useState(false);\n  const [capture, setCapture] = useState(null);\n\n  // Webcam and face capture references and states\n  const webcamRef = useRef(null);\n  const [capturedImages, setCapturedImages] = useState([]);\n  const captureIntervalRef = useRef(null);\n\n  // Add this state to store the uploaded image URLs\n  const [uploadedImageUrls, setUploadedImageUrls] = useState([]);\n\n  // Start webcam and begin face capture\n  const startWebcamCapture = () => {\n    if (captureIntervalRef.current) {\n      clearInterval(captureIntervalRef.current);\n    }\n\n    captureIntervalRef.current = setInterval(async () => {\n      if (webcamRef.current) {\n        const imageSrc = webcamRef.current.getScreenshot();\n        if (imageSrc) {\n          console.log('Image captured, preparing for upload...');\n          \n          // Convert base64 to blob\n          const base64Response = await fetch(imageSrc);\n          const blob = await base64Response.blob();\n          \n          // Upload the image\n          await handleImageUpload(blob);\n          \n          setCapturedImages(prevImages => [...prevImages, imageSrc]);\n        }\n      }\n    }, 5000);\n  };\n\n  // Stop webcam capture\n  const stopWebcamCapture = () => {\n    if (captureIntervalRef.current) {\n      clearInterval(captureIntervalRef.current);\n      captureIntervalRef.current = null;\n    }\n  };\n\n  // Initial webcam setup\n  useEffect(() => {\n    startWebcamCapture();\n\n    // Cleanup function\n    return () => {\n      stopWebcamCapture();\n    };\n  }, []);\n\n  // Stop capture when quiz ends\n  useEffect(() => {\n    if (reachedQuizEnd) {\n      stopWebcamCapture();\n    }\n  }, [reachedQuizEnd]);\n\n\n  const handleNextQuestion = () => {\n    setBackgroundColor('default');\n    if (currentQuestion < quizData.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n      setTimeLeft(30);\n    } else {\n      setReachedQuizEnd(true);\n      setShowScore(true);\n      setShowConfetti(true);\n    }\n  };\n\n  useEffect(() => {\n    if (timeLeft > 0) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearTimeout(timer);\n    } else {\n      handleNextQuestion();\n    }\n  }, [timeLeft]);\n\n  const handleAnswerOptionClick = (index) => {\n    if (index === quizData[currentQuestion].answer) {\n      setScore(score + 1);\n      setBackgroundColor('correct');\n    } else {\n      setBackgroundColor('incorrect');\n    }\n    setTimeout(handleNextQuestion, 500);\n  };\n\n  const handleRestartQuiz = () => {\n    setCurrentQuestion(0);\n    setScore(0);\n    setShowScore(false);\n    setTimeLeft(30);\n    setShowConfetti(false);\n    setReachedQuizEnd(false);\n    setBackgroundColor('default');\n    setCapturedImages([]); \n    setUploadedImageUrls([]); // Clear uploaded image URLs\n    startWebcamCapture();\n  };\n\n  const handleImageUpload = async (imageBlob) => {\n    try {\n      console.log('Preparing to upload image blob:', imageBlob);\n      \n      const formData = new FormData();\n      formData.append('image', imageBlob, 'captured-image.jpg');\n\n      console.log('Sending request to server...');\n      const response = await axios.post('http://localhost:3001/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      console.log('Upload response:', response.data);\n      \n      // Store the uploaded image URL\n      if (response.data.fileUrl) {\n        setUploadedImageUrls(prev => [...prev, response.data.fileUrl]);\n      }\n      \n    } catch (error) {\n      console.error('Error uploading image:', error);\n      console.error('Error details:', error.response?.data);\n    }\n  };\n\n  const captureImage = async () => {\n    if (webcamRef.current) {\n      const imageSrc = webcamRef.current.getScreenshot();\n      setCapture(imageSrc);\n      \n      // Convert base64 to blob\n      const base64Response = await fetch(imageSrc);\n      const blob = await base64Response.blob();\n      \n      // Upload the image\n      await handleImageUpload(blob);\n      \n      // Add to captured images array\n      setCapturedImages(prevImages => [...prevImages, imageSrc]);\n    }\n  };\n\n  return (\n    <div className={`one ${backgroundColor}`}>\n      <div className=\"quiz\">\n        {/* Webcam component */}\n        <div className=\"webcam-container\" style={{ display: 'none' }}>\n        <Webcam\n          audio={false}\n          ref={webcamRef}\n          screenshotFormat=\"image/jpeg\"\n          videoConstraints={{\n            width: 220,\n            height: 200,\n            facingMode: \"user\"\n          }}\n        />\n        </div>\n\n        {showConfetti && <Confetti />}\n        {showScore ? (\n          <div className=\"score-section\">\n            <h1>🎉 Congratulations {playerName}! 🎉</h1>\n            <h2>Your Score: {score} / {quizData.length}</h2>\n            <button onClick={handleRestartQuiz}>Restart Quiz</button>\n\n            {/* Optional: Display captured images */}\n            <div className=\"captured-images\">\n              <h3>Captured Images During Quiz:</h3>\n              <div style={{ display: 'flex', flexWrap: 'wrap', gap: '10px' }}>\n                {uploadedImageUrls.map((imageUrl, index) => (\n                  <div key={index} style={{ position: 'relative' }}>\n                    <img \n                      src={imageUrl}\n                      alt={`Captured ${index + 1}`} \n                      style={{\n                        width: '150px',\n                        height: '150px',\n                        objectFit: 'cover',\n                        borderRadius: '8px',\n                        border: '2px solid #ddd'\n                      }}\n                    />\n                    <div style={{\n                      position: 'absolute',\n                      bottom: '5px',\n                      right: '5px',\n                      background: 'rgba(0,0,0,0.7)',\n                      color: 'white',\n                      padding: '2px 6px',\n                      borderRadius: '4px',\n                      fontSize: '12px'\n                    }}>\n                      #{index + 1}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        ) : (\n          <>\n            <div className=\"progress-bar\">\n              <div\n                className=\"progress-bar-fill\"\n                style={{\n                  width: `${((currentQuestion + 1) / quizData.length) * 100}%`,\n                }}\n              ></div>\n            </div>\n            <div className=\"timer\">Time Left: {timeLeft}s</div>\n            <div className=\"question-section\">\n              <h2>{quizData[currentQuestion].question}</h2>\n              {quizData[currentQuestion].image && (\n                <img\n                  src={quizData[currentQuestion].image}\n                  alt=\"quiz illustration\"\n                />\n              )}\n              <div className=\"options\">\n                {quizData[currentQuestion].options.map((option, index) => (\n                  <button\n                    key={index}\n                    onClick={() => handleAnswerOptionClick(index)}\n                    className=\"option-button\"\n                  >\n                    {option}\n                  </button>\n                ))}\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default QuizGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}